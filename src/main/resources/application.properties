spring.application.name=ecommerce

# Sunucu Ayarları
server.port=8080 
# Veya farklı bir port
app.cors.allowed-origins=http://localhost:4200,http://127.0.0.1:4200

# Veritabanı Bağlantısı (MySQL)
spring.datasource.url=jdbc:mysql://localhost:3306/fibiyo_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC 
# 'ecommerce_db' yerine kendi DB adını yaz
spring.datasource.username=root
# MySQL kullanıcı adın
spring.datasource.password=4141
# MySQL şifren
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate Ayarları
spring.jpa.hibernate.ddl-auto=update 
# Başlangıçta 'update' olabilir, sonra 'validate' veya 'none' yap. Şemayı SQL ile oluşturduk!
spring.jpa.show-sql=true 
# Geliştirme sırasında SQL'leri görmek için

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true 
# SQL'leri daha okunaklı formatla

# JWT Ayarları (Değerleri güvenli bir yerden al veya environment variable kullan)
app.jwt.secret=dGhpc0lzTXlTZWN1cmVKV1RLZXkyNTZCaXQhQCMyMDI1
# Kendin generate et!
app.jwt.expiration-ms=86400000 
# 24 saat (milisaniye cinsinden)

# Logging Seviyeleri (İsteğe bağlı)
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG 
# SQL sorgularını logla
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE # SQL parametrelerini logla

# Actuator (İsteğe bağlı - Sağlık kontrolü vb. için)
# management.endpoints.web.exposure.include=health,info

# STRIPE

# Stripe API Keys (Ortam değişkenlerinden almak daha güvenli)
stripe.secret.key=sk_test_51RKG9gD01oYtcBkTUtmKfP3d1QROwmxyhaj1bT9zaRQeSN5kWHpdroCK0MYnZGXdJtBeoKEnaQEFUGwaucCITGSG00VCyunwKE
stripe.publishable.key=pk_test_51RKG9gD01oYtcBkTotU5AlUA7cBjbZ4LpSnRilKXlthWdZr0LYBjXYXNH0poPGMRajTT96Z9WHsGd5vveELQnJxt00ybAL4ADr
# Stripe Webhook Secret (Stripe dashboard'dan oluşturulacak)
stripe.webhook.secret=whsec_83658529c0804f09cc053e207c6848155503086bb39008031dd4cb8e01ea9288

# File Upload Configuration
# BU YOLU KENDİ SİSTEMİNİZE GÖRE AYARLAYIN! Klasörün var olduğundan emin olun.
# Örnek: Windows -> file.upload-dir=C:/dev/ecommerce-uploads/
# Örnek: Linux/MacOS -> file.upload-dir=/var/www/ecommerce-uploads/ veya /Users/user/ecommerce-uploads/
# Proje içindeki bir klasör yerine dışında bir yer olması genelde daha iyidir (build sırasında silinmemesi için)
file.upload-dir=./uploads/
# Proje kök dizininde 'uploads' klasörü oluşturur (Basit başlangıç için)

# Dosyaların servis edileceği URL path'i (WebConfig'de kullanılacak)
file.serve-path=/uploads/

# Email Configuration (Örnek: Gmail App Password veya Mailtrap)
spring.mail.host=smtp.turkticaret.net
spring.mail.port=587
# veya 465 (SSL) veya Mailtrap portu (25, 465, 587, 2525)
spring.mail.username=bilgi@agrotopya.com.tr
 # veya Mailtrap kullanıcı adınız
spring.mail.password=uJ46284+=webmail
 # DİKKAT! Gerçek şifre değil!
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
 # TLS için (Gmail 587 port için gerekli)
spring.mail.properties.mail.smtp.starttls.required=true
 # TLS zorunlu
# spring.mail.properties.mail.smtp.ssl.enable=true # Eğer 465 portunu kullanıyorsan bunu açıp starttls'i kapatabilirsin
spring.mail.properties.mail.transport.protocol=smtp

# Opsiyonel: Gönderen e-posta adresi (eğer username'den farklı olacaksa)
# spring.mail.default-encoding=UTF-8
mail.sender.address=no-reply@fibiyo.com
mail.sender.name=Fibiyo Destek Ekibi



gemini.api.key=AIzaSyBUi9bTM6Ui11ymKuuJuLQfoF4kjErCW-M

# AI Service Configuration (OpenAI)
# GÜVENLİK: Production'da API Anahtarını buraya YAZMAYIN! Ortam değişkeni veya Secrets Manager kullanın!
openai.api.key=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

# OpenAI Timeout Ayarları (Saniye cinsinden - Opsiyonel)
openai.timeout.connect=10
openai.timeout.read=120
# İmaj üretme uzun sürebilir
openai.timeout.write=10